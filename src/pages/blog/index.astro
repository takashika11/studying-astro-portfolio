---
import Layout from '../../layouts/Layout.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';

const posts = (await getCollection('blog'))
  .filter(post => typeof post.slug === 'string' && post.slug.length > 0)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

console.log(posts);
---

<Layout title={`Blog - ${SITE_TITLE}`} description={SITE_DESCRIPTION}>
  <main class="page-container">
    <h1 class="graditent-text page-title">Blog</h1>

    <p class="blog-description">
    このブログでは、私が興味を持っている事や、
    制作物の裏側、技術的な挑戦について発信していこうと考えています。
  </p>


    <section>
      <ul>
        {posts.map(post => (
          <li key={post.slug}>
            <a href={`/blog/${post.slug}/`}>
              {post.data.heroImage && (
                <Image width={720} height={360} src={post.data.heroImage} alt="" />
              )}
              <h4 class="title">{post.data.title}</h4>
              <p class="date">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </a>
          </li>
        ))}
      </ul>
    </section>
  </main>
</Layout>

<style>
 .blog-description {
  text-align: center;
  max-width: 600px;
  margin: 0 auto 3rem;
  line-height: 1.6;
}

ul {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  ul li {
    width: calc(50% - 1rem);
  }

  ul li * {
    text-decoration: none;
    transition: 0.2s ease;
  }

  ul li:first-child {
    width: 100%;
    margin-bottom: 1rem;
    text-align: center;
  }

  ul li:first-child img {
    width: 100%;
  }

  ul li:first-child .title {
    font-size: 2.369rem;
  }

  ul li img {
  margin-bottom: 0.5rem;
  border-radius: 12px;
  width: 100%;
  aspect-ratio: 16/9; /* 画像の縦横比を16:9に統一 */
  object-fit: cover; /* 縦横比に合わせて画像を切り抜き、スペースに合わせる */
}

  ul li a {
    display: block;
    /* transitionプロパティを追加して、変形を滑らかにする */
    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    border-radius: 12px; /* 角を丸くする */
  }

  .title {
    margin: 0;
    color: var(--text-color);
    line-height: 1;
  }

  .date {
    margin: 0;
    color: rgb(var(--gray));
  }

  ul li a:hover h4,
  ul li a:hover .date {
    color: rgb(var(--accent));
  }

  ul li a:hover {
  transform: translateY(-5px); /* 全体を少し上に動かす */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1); /* 影を加えて浮いているように見せる */
}

ul a:hover img {
  /* imgの拡大は不要。親要素が動くため、imgも一緒に動きます */
  box-shadow: none;
  transform: none;
}
  @media (max-width: 720px) {
    ul {
      gap: 0.5em;
    }

    ul li {
      width: 100%;
      text-align: center;
    }

    ul li:first-child {
      margin-bottom: 0;
    }

    ul li:first-child .title {
      font-size: 1.563em;
    }
  }

  
</style>